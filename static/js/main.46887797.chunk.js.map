{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","apis/jsonPlaceholder.js","components/Scroll.js","components/ErrorBoundry.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","searchedRobot","filter","robot","toLowerCase","includes","map","SearchBox","props","type","placeholder","onChange","searchChange","axios","create","baseURL","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","searchValue","fetchUsers","a","jsonPlaceholder","get","response","data","handleSearch","event","target","value","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACE,6BAAKL,IACL,4BAAIC,WCYGK,EAjBE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cAK1B,OAJuBD,EAAOE,QAAO,SAACC,GAAD,OACnCA,EAAMV,KAAKW,cAAcC,SAASJ,EAAcG,kBAG5BE,KAAI,SAACH,GACzB,OACE,cAAC,EAAD,CAEER,GAAIQ,EAAMR,GACVF,KAAMU,EAAMV,KACZC,MAAOS,EAAMT,OAHRS,EAAMR,QCIJY,EAbG,SAACC,GACjB,OACE,qBAAKZ,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,EAAMI,kB,gBCPTC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAQ,0CCSKC,EAVA,SAACR,GACd,OACE,qBACES,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGZ,EAAMa,YCWEC,E,4MAfbC,MAAQ,CACNC,UAAU,G,uDAGZ,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,+DAEFG,KAAKnB,MAAMa,a,GAZKQ,aCgDZC,E,4MAzCbP,MAAQ,CACNvB,OAAQ,GACR+B,YAAa,I,EAMfC,W,sBAAa,4BAAAC,EAAA,sEACYC,EAAgBC,IAAI,UADhC,OACLC,EADK,OAGX,EAAKR,SAAS,CACZ5B,OAAQoC,EAASC,OAJR,2C,EAObC,aAAe,SAACC,GACd,EAAKX,SAAS,CACZG,YAAaQ,EAAMC,OAAOC,S,uDAb9B,WACEd,KAAKK,e,oBAgBP,WACE,OAAQL,KAAKJ,MAAMvB,OAAO0C,OAGxB,sBAAK9C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWgB,aAAce,KAAKW,eAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CACErC,cAAe0B,KAAKJ,MAAMQ,YAC1B/B,OAAQ2B,KAAKJ,MAAMvB,gBAT3B,gD,GAxBY6B,aCIHc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46887797.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${id}?200x200`} alt='robots' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots, searchedRobot }) => {\r\n  const filteredRobots = robots.filter((robot) =>\r\n    robot.name.toLowerCase().includes(searchedRobot.toLowerCase())\r\n  );\r\n\r\n  return filteredRobots.map((robot) => {\r\n    return (\r\n      <Card\r\n        key={robot.id}\r\n        id={robot.id}\r\n        name={robot.name}\r\n        email={robot.email}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={props.searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `https://jsonplaceholder.typicode.com/`,\r\n});\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{ overflow: 'scroll', border: '5px solid black', height: '800px' }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooops...Something went wrong!</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\nimport CardList from './components/CardList';\nimport SearchBox from './components/SearchBox';\nimport './App.css';\nimport jsonPlaceholder from './apis/jsonPlaceholder';\nimport Scroll from './components/Scroll';\nimport ErrorBoundry from './components/ErrorBoundry';\n\nclass App extends Component {\n  state = {\n    robots: [],\n    searchValue: '',\n  };\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  fetchUsers = async () => {\n    const response = await jsonPlaceholder.get('/users');\n\n    this.setState({\n      robots: response.data,\n    });\n  };\n  handleSearch = (event) => {\n    this.setState({\n      searchValue: event.target.value,\n    });\n  };\n\n  render() {\n    return !this.state.robots.length ? (\n      <h1>Loading...</h1>\n    ) : (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={this.handleSearch} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList\n              searchedRobot={this.state.searchValue}\n              robots={this.state.robots}\n            />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}